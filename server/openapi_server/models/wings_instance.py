# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class WingsInstance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, username=None, password=None, domain=None, export_url=None, server=None):  # noqa: E501
        """WingsInstance - a model defined in OpenAPI

        :param username: The username of this WingsInstance.  # noqa: E501
        :type username: object
        :param password: The password of this WingsInstance.  # noqa: E501
        :type password: object
        :param domain: The domain of this WingsInstance.  # noqa: E501
        :type domain: object
        :param export_url: The export_url of this WingsInstance.  # noqa: E501
        :type export_url: object
        :param server: The server of this WingsInstance.  # noqa: E501
        :type server: object
        """
        self.openapi_types = {
            'username': object,
            'password': object,
            'domain': object,
            'export_url': object,
            'server': object
        }

        self.attribute_map = {
            'username': 'username',
            'password': 'password',
            'domain': 'domain',
            'export_url': 'export_url',
            'server': 'server'
        }

        self._username = username
        self._password = password
        self._domain = domain
        self._export_url = export_url
        self._server = server

    @classmethod
    def from_dict(cls, dikt) -> 'WingsInstance':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WingsInstance of this WingsInstance.  # noqa: E501
        :rtype: WingsInstance
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self):
        """Gets the username of this WingsInstance.


        :return: The username of this WingsInstance.
        :rtype: object
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this WingsInstance.


        :param username: The username of this WingsInstance.
        :type username: object
        """

        self._username = username

    @property
    def password(self):
        """Gets the password of this WingsInstance.


        :return: The password of this WingsInstance.
        :rtype: object
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this WingsInstance.


        :param password: The password of this WingsInstance.
        :type password: object
        """

        self._password = password

    @property
    def domain(self):
        """Gets the domain of this WingsInstance.


        :return: The domain of this WingsInstance.
        :rtype: object
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this WingsInstance.


        :param domain: The domain of this WingsInstance.
        :type domain: object
        """

        self._domain = domain

    @property
    def export_url(self):
        """Gets the export_url of this WingsInstance.


        :return: The export_url of this WingsInstance.
        :rtype: object
        """
        return self._export_url

    @export_url.setter
    def export_url(self, export_url):
        """Sets the export_url of this WingsInstance.


        :param export_url: The export_url of this WingsInstance.
        :type export_url: object
        """

        self._export_url = export_url

    @property
    def server(self):
        """Gets the server of this WingsInstance.


        :return: The server of this WingsInstance.
        :rtype: object
        """
        return self._server

    @server.setter
    def server(self, server):
        """Sets the server of this WingsInstance.


        :param server: The server of this WingsInstance.
        :type server: object
        """

        self._server = server
